name: Build

on: [push]

jobs:
  build_app:
    name: Build app
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Test
        run: ./gradlew clean test
      - name: Build with Gradle
        if: ${{ github.ref == 'refs/heads/main' }}
        run: ./gradlew build -x test
      - name: Upload JAR artifact
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions/upload-artifact@v1
        with:
          name: jar
          path: build/libs
      - name: Upload front-end content artifact
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions/upload-artifact@v1
        with:
          name: static
          path: build/distributions
  build_image:
    name: Build Docker Image
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [ build_app ]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Download JAR artifact
        uses: actions/download-artifact@v1
        with:
          name: jar
      - name: Set app version variable
        run: echo "APP_VERSION=$(jar_filename="$(echo jar/codenames-*-all.jar)"; jar_filename="${jar_filename##jar/codenames-}"; echo "${jar_filename%-all.jar}")" >> $GITHUB_ENV
      - name: Build the image
        run: docker build . --file Dockerfile --tag codenames:$APP_VERSION --build-arg JAR_NAME=codenames-$APP_VERSION-all.jar
      - name: Save the image
        run: docker save codenames:$APP_VERSION > codenames-$APP_VERSION.tar
      - name: Upload image artifact
        uses: actions/upload-artifact@v1
        with:
          name: image
          path: codenames-${APP_VERSION}.tar
